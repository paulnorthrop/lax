% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ismev.R
\name{alogLik.gev.fit}
\alias{alogLik.gev.fit}
\title{Loglikelihood adjustment of ismev fits}
\usage{
\method{alogLik}{gev.fit}(x, cluster = NULL, use_vcov = TRUE, ...)
}
\arguments{
\item{x}{A fitted model object.}

\item{cluster}{A vector or factor indicating from which cluster the
  respective loglikelihood contributions from \code{loglik} originate.
  This must have the same length as the vector returned by \code{loglik}.
  If \code{cluster} is not supplied then it is set inside
  \code{\link[chandwich]{adjust_loglik}} under the assumption that
  each observation forms its own cluster.

  If the sandwich package
  \href{http://dx.doi.org/10.18637/jss.v016.i09}{(Zeleis, 2006)}
  is used to estimate the quantities required to adjust the loglikelihood
  then \code{cluster} determines whether the variance matrix \code{V}
  of the score vector is estimated using \code{\link[sandwich]{meat}}
  (\code{cluster} is \code{NULL}) or
  \code{\link[sandwich:vcovCL]{meatCL}}
  (\code{cluster} is not \code{NULL}).}

\item{use_vcov}{A logical scalar.  Should we use the \code{vcov} S3 method
for \code{x} (if this exists) to estimate the Hessian of the independence
loglikelihood to be passed as the argument \code{H} to
\code{\link[chandwich]{adjust_loglik}}?
Otherwise, \code{H} is estimated inside
\code{\link[chandwich]{adjust_loglik}} using
\code{\link[stats:optim]{optimHess}}.}

\item{...}{Further arguments to be passed to the functions in the
sandwich package \code{\link[sandwich]{meat}}, if \code{cluster = NULL},
or \code{\link[sandwich:vcovCL]{meatCL}}, otherwise.}
}
\description{
Description
}
\examples{
# We need the evd package
got_ismev <- requireNamespace("ismev", quietly = TRUE)

if (got_ismev) {
  library(ismev)
  # An example from the ismev::gev.fit documentation
  data(portpirie)
  gev_fit <- gev.fit(portpirie[, 2], show = FALSE)
  adj_gev_fit <- alogLik(gev_fit)
  summary(adj_gev_fit)

  ydat <- as.matrix(rnorm(length(portpirie[, 2])))
  gev_fit <- oogev.fit(portpirie[,2], ydat = ydat, mul = 1, show = FALSE)
  adj_gev_fit <- alogLik(gev_fit)
}
}
